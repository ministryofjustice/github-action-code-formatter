name: Security Advisory Alert
description: Send GitHub security advisories from another repo to slack
inputs:
  target-repo-owner:
    description: "The account owner of the repository (or organisation name). The name is not case sensitive."
    required: true
    default: "ministryofjustice"
  target-repo:
    description: "The name of the repository without the .git extension. The name is not case sensitive."
    required: true
    default: "template-repository"
  version-file-path:
    description: "Path to yaml file containing version key"
    required: true
    default: ""
  version-key:
    description: "Version key path within yaml file, e.g. 'global.datahub.version'"
    required: true
    default: ""
  security-alert-action-file:
    description: "Name of the github action that runs this job"
    required: true
    default: ""
outputs:
  num_filtered_advisories:
    description: "Number of advisories matching criteria since last run"
    value: ${{ steps.filter_advisories.outputs.num_filtered_advisories }}
runs:
  using: "composite"
  steps:
    - name: Checkout repository
      uses: actions/checkout@v4      
      with:
        repository: ${{ github.repository }}

    - name: Fetch security advisories
      shell: bash
      env: 
        GH_TOKEN: ${{ github.token }}
      run: |
        gh api -H "Accept: application/vnd.github+json" /repos/"${{ inputs.target-repo-owner}}"/"${{ inputs.target-repo }}"/security-advisories > advisories.json

    - name: Get last run date for this Action
      id: get_last_run_datetime
      shell: bash
      env: 
          GH_TOKEN: ${{ github.token }}
      run: |
        LAST_RUN_DATE=$(gh api \
        -H "Accept: application/vnd.github+json" \
        -H "X-GitHub-Api-Version: 2022-11-28" \
        /repos/"${{ github.repository}}"/actions/runs \
        --jq '.workflow_runs[] 
          | select(.conclusion=="success" and .status=="completed" and (.path|endswith("${{ inputs.security-alert-action-file }}"))) 
          | .run_started_at' \
        | head -n 1)
        echo "last_run_datetime=${LAST_RUN_DATE}" >> "${GITHUB_OUTPUT}"
        echo "${LAST_RUN_DATE}"

    - name: Read current version from values.yaml
      id: read_current_version
      shell: bash
      run: |
        PYTHON_DICT_KEY=$(echo "${{ inputs.version-key }}" | awk -F'.' '{ for(i=1; i<=NF; i++) printf "[\x27"$i"\x27]" }')
        APPLICATION_VERSION=$(python -c "import yaml; print(yaml.safe_load(open(${{ inputs.version-file-path }}))${PYTHON_DICT_KEY})")
        echo "application_version=${APPLICATION_VERSION}" >> "${GITHUB_OUTPUT}"
        echo "${APPLICATION_VERSION}"

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"

    - name: Install Python dependencies
      shell: bash
      run: |
        pip install --upgrade pip
        pip install --no-cache-dir -r requirements.txt

    - name: Filter advisories
      id: filter_advisories
      shell: bash
      env:
        REPO: inputs.target-repo
        REPO_OWNER: inputs.target-repo-owner
      run: python filter_advisories.py \
        "${{ steps.read_current_version.outputs.application_version }}" \
        "${{ steps.get_last_run_datetime.outputs.last_run_datetime }}"
